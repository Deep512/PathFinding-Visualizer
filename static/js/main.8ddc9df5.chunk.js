(this["webpackJsonppathfinding-visualizer"]=this["webpackJsonppathfinding-visualizer"]||[]).push([[0],{161:function(t,e,s){t.exports=s(305)},166:function(t,e,s){},167:function(t,e,s){},168:function(t,e,s){},169:function(t,e,s){},304:function(t,e,s){},305:function(t,e,s){"use strict";s.r(e);var i=s(0),n=s.n(i),a=s(31),o=s.n(a);s(166),s(167),s(168);class r extends i.Component{render(){const{isStart:t,isFinish:e,row:s,col:i,isWall:a,isWeighted:o,onMouseDown:r,onMouseUp:h,onMouseEnter:c,onMouseOut:l}=this.props,d=e?"finish":t?"start":a?"wall":o?"weight":"";return n.a.createElement(n.a.Fragment,null,n.a.createElement("td",{id:"node-".concat(s,"-").concat(i),className:"node ".concat(d," "),onMouseDown:()=>r(s,i),onMouseEnter:()=>c(s,i),onMouseOut:()=>l(s,i),onMouseUp:()=>h()}))}}var h=r,c=s(316),l=s(312),d=s(314),u=s(315);s(169);class g extends i.Component{constructor(t){super(t),this.algorithmOptions=[{key:"Dijkstra",text:"Dijkstra",value:"Dijkstra"},{key:"A* Search",text:"A* Search",value:"A* Search"},{key:"Greedy",text:"Greedy Best First Search",value:"Greedy"},{key:"BFS",text:"Breadth First Search (BFS)",value:"BFS"},{key:"DFS",text:"Depth First Search (DFS)",value:"DFS"}],this.obstacles=[{key:"Wall",text:"Wall",value:"Wall",image:{src:"/wall.png"}},{key:"Weighted Node",text:"Weighted Node",value:"Weighted Node",image:{src:"/weight.svg"}}],this.hideFixedMenu=()=>this.setState({fixed:!1}),this.showFixedMenu=()=>this.setState({fixed:!0}),this.handleVisualize=t=>{this.props.onVisualizePressed(this.state.algorithm)},this.obstacleCatcher=t=>{let e=t.currentTarget.getElementsByTagName("span")[0].innerHTML;this.props.onChoosingObstacle(e)},this.algorithmCatcher=t=>{let e=t.currentTarget.getElementsByTagName("span")[0].innerHTML;this.props.onChoosingAlgorithm(e),"A* Search"===e?e="A*":"Breadth First Search (BFS)"===e?e="BFS":"Depth First Search (DFS)"===e?e="DFS":"Greedy Best First Search"===e&&(e="Greedy"),this.setState({algorithm:e})},this.state={fixed:!1,algorithm:"Algorithms"}}render(){const{onClearPathPressed:t,onClearGridPressed:e}=this.props;return n.a.createElement(c.a,{fixed:"top",inverted:!0,id:"navbar"},n.a.createElement(l.a,null,n.a.createElement(c.a.Item,{header:!0},n.a.createElement(d.a,{placeholder:"Algorithms",fluid:!0,selection:!0,id:"algo",onChange:this.algorithmCatcher,options:this.algorithmOptions})),n.a.createElement(c.a.Item,{header:!0},n.a.createElement(d.a,{placeholder:"Obstacles",fluid:!0,selection:!0,id:"walls",onChange:this.obstacleCatcher,options:this.obstacles})),n.a.createElement(c.a.Item,null,n.a.createElement(u.a,{id:"button-visualize",variant:"primary",onClick:this.handleVisualize},"Algorithms"===this.state.algorithm?"Pick An Algorithm":"Visualize ".concat(this.state.algorithm," !")),n.a.createElement(u.a,{id:"button",onClick:()=>t()},"Clear Path"),n.a.createElement(u.a,{id:"button",onClick:()=>e()},"Clear Grid"))))}}function f(t,e){const s=function(t,e,s){const i=[];e>0&&i.push(t[e-1][s]);s>0&&i.push(t[e][s-1]);e<t.length-1&&i.push(t[e+1][s]);s<t[0].length-1&&i.push(t[e][s+1]);return i.filter(t=>!t.isVisited)}(t,e.row,e.col);for(let i of s)i.distance=e.distance+(i.isWeighted?15:1),i.parentNode=e}function m(t,e,s,i){var n,a,o=function(t,e,s){const i=[];e>0&&i.push(t[e-1][s]);s>0&&i.push(t[e][s-1]);e<t.length-1&&i.push(t[e+1][s]);s<t[0].length-1&&i.push(t[e][s+1]);return i.filter(t=>!t.isVisited&&!t.isWall)}(t,e.row,e.col);for(let l of o){var r=e.g+(l.isWeighted?15:1),h=!1,c=!1;for(let t of s)if(t===l){c=!0;break}c?r<l.g&&(h=!0):(h=!0,l.h=(n=l,a=i,Math.abs(n.row-a.row)+Math.abs(n.col-a.col)),s.push(l)),h&&(l.parentNode=e,l.g=r,l.f=l.g+l.h)}}function p(t,e,s,i){var n,a,o=function(t,e,s){const i=[];e>0&&i.push(t[e-1][s]);s>0&&i.push(t[e][s-1]);e<t.length-1&&i.push(t[e+1][s]);s<t[0].length-1&&i.push(t[e][s+1]);return i.filter(t=>!t.isVisited&&!t.isWall)}(t,e.row,e.col);for(let c of o){var r=!1,h=!1;for(let t of s)if(t===c){r=!0;break}r||(h=!0,c.h=(n=c,a=i,Math.abs(n.row-a.row)+Math.abs(n.col-a.col)+(c.isWeighted?15:0)),s.push(c)),h&&(c.parentNode=e,c.f=c.h)}}function S(t,e){const s=function(t,e,s){const i=[];e>0&&i.push(t[e-1][s]);s>0&&i.push(t[e][s-1]);e<t.length-1&&i.push(t[e+1][s]);s<t[0].length-1&&i.push(t[e][s+1]);return i.filter(t=>!t.isVisited)}(t,e.row,e.col);for(let i of s)i.distance=e.distance+1,i.parentNode=e}function v(t,e,s){const i=function(t,e,s){const i=[];s>0&&i.push(t[e][s-1]);e>0&&i.push(t[e-1][s]);s<t[0].length-1&&i.push(t[e][s+1]);e<t.length-1&&i.push(t[e+1][s]);return i.filter(t=>!t.isVisited&&!t.isWall)}(t,e.row,e.col);for(let n of i)s.unshift(n),n.distance=e.distance+1,n.parentNode=e}s(304);class w extends i.Component{constructor(t){super(t),this.visualize=t=>{if(!this.state.inProgress){var e=document.getElementById("info");if("Algorithms"!==t){this.setState({inProgress:!0}),this.state.afterPath&&this.clearPath();var{grid:s,startX:i,startY:n,finishX:a,finishY:o}=this.state,r=s[i][n],h=s[a][o];"Dijkstra"===t?this.visualizeDijkstra(s,r,h):"A*"===t?this.visualizeAStar(s,r,h):"Greedy"===t?this.visualizeGreedy(s,r,h):"BFS"===t?this.visualizeBFS(s,r,h):"DFS"===t&&this.visualizeDFS(s,r,h)}else e.innerHTML="Please choose an algorithm to visualize"}},this.chooseAlgorithm=t=>{var e=document.getElementById("info");"Dijkstra"===t?(t="W",e.innerHTML="Dijkstra's Algorithm is <i>weighted</i> and <i>guarantees</i> the shortest path!"):"A* Search"===t?(t="W",e.innerHTML="A* Search is <i>weighted</i> and <i>guarantees</i> the shortest path!"):"Greedy Best First Search"===t?(t="W",e.innerHTML="Greedy Best First Search is <i>weighted</i> and <i>does not guarantee</i> the shortest path!"):"Breadth First Search (BFS)"===t?(t="U",this.clearWeightedNodes(),e.innerHTML="Breath First Search is <i>unweighted</i> and <i>guarantees</i> the shortest path!"):"Depth First Search (DFS)"===t&&(t="U",this.clearWeightedNodes(),e.innerHTML="Depth First Search is <i>unweighted</i> and <i>does not guarantee</i> the shortest path!"),this.setState({algo:t})},this.chooseObstacle=t=>{this.setState({obstacle:t})},this.clearPath=()=>{if(this.state.inProgress)return;const{grid:t}=this.state;var e=t;for(let s of e)for(let t=0;t<s.length;t++){const e=s[t],i={...e,distance:1/0,isVisited:!1,parentNode:null,f:1/0,g:0,h:1/0};i.isStart||i.isFinish||i.isWall||i.isWeighted?i.isStart?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node start":i.isFinish?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node finish":i.isWall?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node wall":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node weight":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node",s[t]=i}this.setState({grid:e,afterPath:!1})},this.clearGrid=()=>{if(this.state.inProgress)return;const{grid:t}=this.state;var e=t;for(let s of e)for(let t=0;t<s.length;t++){const e=s[t],i={...e,distance:1/0,isVisited:!1,isWall:!1,isWeighted:!1,parentNode:null,f:1/0,g:0,h:1/0};i.isStart||i.isFinish?i.isStart?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node start":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node finish":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node",s[t]=i}this.setState({grid:e,afterPath:!1})},this.state={grid:[],dragStart:!1,dragEnd:!1,mousePressed:!1,obstacle:"Wall",startX:14,startY:10,finishX:14,finishY:56,inProgress:!1,afterPath:!1,algo:""}}componentDidMount(){const t=this.getInitialGrid();this.setState({grid:t}),window.addEventListener("resize",()=>this.setState(t=>({...t,grid:this.getInitialGrid()})))}onMouseDown(t,e){if(this.state.inProgress||this.state.afterPath)return;const{grid:s}=this.state;if(s[t][e].isStart)return void this.setState({mousePressed:!0,dragStart:!0});if(s[t][e].isFinish)return void this.setState({mousePressed:!0,dragEnd:!0});const i=this.updatedGrid(this.state.grid,t,e);this.setState({grid:i,mousePressed:!0})}onMouseEnter(t,e){const{grid:s}=this.state;if(this.state.inProgress||this.state.afterPath)return;if(!this.state.mousePressed)return;if(this.state.dragStart){const i=s;return i[t][e].isStart=!s[t][e].isStart,i[t][e].isWall=!1,i[t][e].isWeighted=!1,void this.setState({grid:i,startX:t,startY:e})}if(this.state.dragEnd){const i=s;return i[t][e].isWeighted=!1,i[t][e].isWall=!1,i[t][e].isFinish=!s[t][e].isFinish,void this.setState({grid:i,finishX:t,finishY:e})}if(s[t][e].isStart||s[t][e].isFinish)return;const i=this.updatedGrid(this.state.grid,t,e);this.setState({grid:i})}onMouseOut(t,e){if(this.state.inProgress||this.state.afterPath)return;const{grid:s}=this.state;if(this.state.mousePressed){if(this.state.dragStart){const i=s;return i[t][e].isStart=!s[t][e].isStart,void this.setState({grid:i,startX:t,startY:e})}if(this.state.dragEnd){const i=s;return i[t][e].isFinish=!s[t][e].isFinish,void this.setState({grid:i,finishX:t,finishY:e})}}}onMouseUp(t,e){this.state.inProgress||this.state.afterPath||this.setState({dragStart:!1,dragEnd:!1,mousePressed:!1})}animateNoPath(){for(let t=0;t<30;t++){for(let e=0;e<70;e++)setTimeout(()=>{this.state.grid[t][e].isVisited||this.state.grid[t][e].isFinish||this.state.grid[t][e].isStart||this.state.grid[t][e].isWall||this.state.grid[t][e].isWeighted||(document.getElementById("node-".concat(t,"-").concat(e)).className="node nopath")},40*t+40*e);setTimeout(()=>{29===t&&window.alert("No Path Found :(")},4500)}}animatePathNodes(t){if(0===t.length)return setTimeout(()=>{this.animateNoPath()},2e3),void this.setState({inProgress:!1,afterPath:!0});for(let e=0;e<=t.length;e++){if(e===t.length)return void setTimeout(()=>{this.setState({inProgress:!1,afterPath:!0})},30*e);setTimeout(()=>{const s=t[e];s.isStart||s.isFinish||s.isWeighted?s.isStart?document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node startSpecial":s.isFinish?document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node finishSpecial":document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node weightSpecial":document.getElementById("node-".concat(s.row,"-").concat(s.col)).className="node inpath"},30*e)}}animateVisitedNodes(t,e){for(let s=0;s<=t.length;s++){if(s===t.length)return void setTimeout(()=>{this.animatePathNodes(e)},10*s);setTimeout(()=>{const e=t[s];e.isStart||e.isFinish||e.isWeighted?e.isStart?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node visitedStart":e.isFinish?document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node visitedFinish":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node visitedWeight":document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node visited"},10*s)}}visualizeDijkstra(t,e,s){const i=function(t,e,s){e.distance=0;const i=[],n=function(t){const e=[];for(let s of t)for(let t of s)e.push(t);return e}(t);for(;n.length;){n.sort((t,e)=>t.distance-e.distance);const e=n.shift();if(!e.isWall){if(e.distance===1/0)return i;if(e.isVisited=!0,i.push(e),e===s)return i;f(t,e)}}}(t,e,s),n=function(t){const e=[],s=t;for(;t.parentNode;)e.push(t),t=t.parentNode;return s!==t&&e.push(t),e.reverse(),e}(s);this.animateVisitedNodes(i,n)}visualizeAStar(t,e,s){const i=function(t,e,s){var i=[],n=[];for(e.f=0,n.push(e);n.length>0;){n.sort((t,e)=>t.f-e.f);const e=n.shift();if(!0!==e.isWall){if(e.f===1/0)return i;if(e.isVisited=!0,i.push(e),e===s)return i;m(t,e,n,s)}}return i}(t,e,s),n=function(t){for(var e=t,s=[];e.parentNode;)s.push(e),e=e.parentNode;return e!==t&&s.push(e),s.reverse()}(s);this.animateVisitedNodes(i,n)}visualizeBFS(t,e,s){const i=function(t,e,s){e.distance=0;const i=[],n=function(t){const e=[];for(let s of t)for(let t of s)e.push(t);return e}(t);for(;n.length;){n.sort((t,e)=>t.distance-e.distance);const e=n.shift();if(!e.isWall){if(e.distance===1/0)return i;if(e.isVisited=!0,i.push(e),e===s)return i;S(t,e)}}}(t,e,s),n=function(t){const e=[],s=t;for(;t.parentNode;)e.push(t),t=t.parentNode;return s!==t&&e.push(t),e.reverse(),e}(s);this.animateVisitedNodes(i,n)}visualizeDFS(t,e,s){const i=function(t,e,s){e.distance=0;const i=[],n=[];for(n.push(e);n.length;){const e=n.shift();if(!e.isWall){if(e.distance===1/0)return i;if(!e.isVisited){if(e.isVisited=!0,i.push(e),e===s)return i;v(t,e,n)}}}return i}(t,e,s),n=function(t){const e=[],s=t;for(;t.parentNode;)e.push(t),t=t.parentNode;return s!==t&&e.push(t),e.reverse(),e}(s);this.animateVisitedNodes(i,n)}visualizeGreedy(t,e,s){const i=function(t,e,s){var i=[],n=[];for(e.f=0,n.push(e);n.length>0;){n.sort((t,e)=>t.f-e.f);const e=n.shift();if(!0!==e.isWall){if(e.f===1/0)return i;if(e.isVisited=!0,i.push(e),e===s)return i;p(t,e,n,s)}}return i}(t,e,s),n=function(t){for(var e=t,s=[];e.parentNode;)s.push(e),e=e.parentNode;return e!==t&&s.push(e),s.reverse()}(s);this.animateVisitedNodes(i,n)}render(){const{grid:t}=this.state;return n.a.createElement(n.a.Fragment,null,n.a.createElement(g,{onVisualizePressed:this.visualize,onClearPathPressed:this.clearPath,onClearGridPressed:this.clearGrid,onChoosingAlgorithm:this.chooseAlgorithm,onChoosingObstacle:this.chooseObstacle}),n.a.createElement("div",{className:"main-content",onKeyDown:this.onKeyDown},n.a.createElement("h3",{id:"info"},"Please choose an algorithm to visualize"),n.a.createElement("table",{className:"grid"},n.a.createElement("tbody",null,t.map((t,e)=>n.a.createElement("tr",{key:e},t.map((t,e)=>n.a.createElement(h,{key:e,row:t.row,col:t.col,isStart:t.isStart,isFinish:t.isFinish,isWall:t.isWall,isWeighted:t.isWeighted,onMouseDown:(t,e)=>this.onMouseDown(t,e),onMouseEnter:(t,e)=>this.onMouseEnter(t,e),onMouseUp:()=>this.onMouseUp(),onMouseOut:(t,e)=>this.onMouseOut(t,e)}))))))))}getColumnNumber(){const t=window.innerWidth;return t>=1710?65:t>=1600?60:t>=1450?55:t>=1320?50:t>=1190?45:t>=1060?40:t>=1e3?35:20}getInitialGrid(){var t=[];const{startX:e,startY:s,finishX:i}=this.state,n=this.getColumnNumber(),a=20===n?19:n-9;this.setState(t=>({...t,finishY:a}));for(let r=0;r<28;r++){var o=[];for(let t=0;t<n;t++){const n={row:r,col:t,isStart:r===e&&t===s,isFinish:r===i&&t===a,isWeighted:!1,distance:1/0,isVisited:!1,isWall:!1,parentNode:null,f:1/0,g:0,h:1/0};o.push(n)}t.push(o)}return t}clearWeightedNodes(){const{grid:t}=this.state;var e=t;for(let s of e)for(let t=0;t<s.length;t++){const e=s[t];if(e.isWeighted){const i={...e,isWeighted:!1};i.isStart||i.isFinish||(document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node"),s[t]=i}}this.setState({grid:e})}updatedGrid(t,e,s){const i=t.slice(),n=t[e][s];if("Wall"===this.state.obstacle){n.isWeighted&&(n.isWeighted=!1);const t={...n,isWall:!n.isWall};return i[e][s]=t,i}{if("U"===this.state.algo)return t;n.isWall&&(n.isWall=!1);const a={...n,isWeighted:!n.isWeighted};return i[e][s]=a,i}}}var N=function(){return n.a.createElement("div",{className:"App"},n.a.createElement("link",{href:"https://fonts.googleapis.com/css2?family=Merriweather&family=Nanum+Myeongjo:wght@700&family=PT+Serif&display=swap",rel:"stylesheet"}),n.a.createElement("link",{href:"https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap",rel:"stylesheet"}),n.a.createElement(w,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(n.a.createElement(N,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(t=>{t.unregister()})}},[[161,1,2]]]);
//# sourceMappingURL=main.8ddc9df5.chunk.js.map