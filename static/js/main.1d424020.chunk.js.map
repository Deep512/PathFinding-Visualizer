{"version":3,"sources":["components/Node/Node.js","components/NavigationBar/NavigationBar.js","components/Algorithms/Dijkstra.js","components/Algorithms/AStar.js","components/Algorithms/GreedyBestFirstSearch.js","components/Algorithms/BFS.js","components/Algorithms/DFS.js","containers/PathfindingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["Node","Component","render","isStart","isFinish","row","col","isWall","isWeighted","onMouseDown","onMouseUp","onMouseEnter","onMouseOut","this","props","extraClassName","React","createElement","Fragment","id","concat","className","NavigationBar","constructor","super","algorithmOptions","key","text","value","obstacles","image","src","hideFixedMenu","setState","fixed","showFixedMenu","handleVisualize","e","onVisualizePressed","state","algorithm","obstacleCatcher","val","currentTarget","getElementsByTagName","innerHTML","onChoosingObstacle","algorithmCatcher","onChoosingAlgorithm","onClearPathPressed","onClearGridPressed","Menu","inverted","Container","Item","header","Dropdown","placeholder","fluid","selection","onChange","options","Button","variant","onClick","updateUnvisitedNeighbors","grid","node","unvisitedNeighbors","nodes","push","length","filter","isVisited","getUnvisitedNeighbors","n","distance","parentNode","curr","openList","finishNode","nodeA","nodeB","neighbors","getOpenNeighbors","neighbor","gScore","g","best","inOpenList","h","Math","abs","f","queue","unshift","Main","visualize","inProgress","a","document","getElementById","afterPath","clearPath","startX","startY","finishX","finishY","startNode","visualizeDijkstra","visualizeAStar","visualizeGreedy","visualizeBFS","visualizeDFS","chooseAlgorithm","clearWeightedNodes","algo","chooseObstacle","obstacle","final","i","newNode","Infinity","clearGrid","dragStart","dragEnd","mousePressed","componentDidMount","getInitialGrid","window","addEventListener","prevState","newGrid","updatedGrid","animateNoPath","j","setTimeout","alert","animatePathNodes","nodesInOrder","animateVisitedNodes","visitedNodes","unVisitedNodes","getAllNodes","sort","closestNode","shift","dijkstra","reverse","getDijkstraPath","astar","ret","getAStarPath","bfs","getBFSPath","dfs","getDFSPath","greedyBFS","getGreedyBFSPath","onKeyDown","map","index","getColumnNumber","innerWidth","noOfColumns","cur","slice","App","href","rel","PathfindingVisualizer","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d424020.chunk.js","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport \"./Node.css\";\nclass Node extends Component {\n\trender() {\n\t\tconst {\n\t\t\tisStart,\n\t\t\tisFinish,\n\t\t\trow,\n\t\t\tcol,\n\t\t\tisWall,\n\t\t\tisWeighted,\n\t\t\tonMouseDown,\n\t\t\tonMouseUp,\n\t\t\tonMouseEnter,\n\t\t\tonMouseOut,\n\t\t} = this.props;\n\t\tconst extraClassName = isFinish\n\t\t\t? \"finish\"\n\t\t\t: isStart\n\t\t\t? \"start\"\n\t\t\t: isWall\n\t\t\t? \"wall\"\n\t\t\t: isWeighted\n\t\t\t? \"weight\"\n\t\t\t: \"\";\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<td\n\t\t\t\t\tid={`node-${row}-${col}`}\n\t\t\t\t\tclassName={`node ${extraClassName} `}\n\t\t\t\t\tonMouseDown={() => onMouseDown(row, col)}\n\t\t\t\t\tonMouseEnter={() => onMouseEnter(row, col)}\n\t\t\t\t\tonMouseOut={() => onMouseOut(row, col)}\n\t\t\t\t\tonMouseUp={() => onMouseUp()}\n\t\t\t\t></td>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Node;\n","import React, { Component } from \"react\"\nimport { Container, Dropdown, Menu, Button } from \"semantic-ui-react\"\nimport \"./NavigationBar.css\"\n\nexport default class NavigationBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tfixed: false,\n\t\t\talgorithm: \"Algorithms\",\n\t\t}\n\t}\n\n\talgorithmOptions = [\n\t\t{\n\t\t\tkey: \"Dijkstra\",\n\t\t\ttext: \"Dijkstra\",\n\t\t\tvalue: \"Dijkstra\",\n\t\t},\n\t\t{\n\t\t\tkey: \"A* Search\",\n\t\t\ttext: \"A* Search\",\n\t\t\tvalue: \"A* Search\",\n\t\t},\n\t\t{\n\t\t\tkey: \"Greedy\",\n\t\t\ttext: \"Greedy Best First Search\",\n\t\t\tvalue: \"Greedy\",\n\t\t},\n\t\t{\n\t\t\tkey: \"BFS\",\n\t\t\ttext: \"Breadth First Search (BFS)\",\n\t\t\tvalue: \"BFS\",\n\t\t},\n\t\t{\n\t\t\tkey: \"DFS\",\n\t\t\ttext: \"Depth First Search (DFS)\",\n\t\t\tvalue: \"DFS\",\n\t\t},\n\t]\n\n\tobstacles = [\n\t\t{\n\t\t\tkey: \"Wall\",\n\t\t\ttext: \"Wall\",\n\t\t\tvalue: \"Wall\",\n\t\t\timage: { src: \"/wall.png\" },\n\t\t},\n\t\t{\n\t\t\tkey: \"Weighted Node\",\n\t\t\ttext: \"Weighted Node\",\n\t\t\tvalue: \"Weighted Node\",\n\t\t\timage: { src: \"/weight.svg\" },\n\t\t},\n\t]\n\n\thideFixedMenu = () => this.setState({ fixed: false })\n\tshowFixedMenu = () => this.setState({ fixed: true })\n\n\thandleVisualize = (e) => {\n\t\tthis.props.onVisualizePressed(this.state.algorithm)\n\t}\n\n\tobstacleCatcher = (e) => {\n\t\tlet val = e.currentTarget.getElementsByTagName(\"span\")[0].innerHTML\n\t\tthis.props.onChoosingObstacle(val)\n\t}\n\n\talgorithmCatcher = (e) => {\n\t\tlet val = e.currentTarget.getElementsByTagName(\"span\")[0].innerHTML\n\t\tthis.props.onChoosingAlgorithm(val)\n\t\tif (val === \"A* Search\") {\n\t\t\tval = \"A*\"\n\t\t} else if (val === \"Breadth First Search (BFS)\") {\n\t\t\tval = \"BFS\"\n\t\t} else if (val === \"Depth First Search (DFS)\") {\n\t\t\tval = \"DFS\"\n\t\t} else if (val === \"Greedy Best First Search\") {\n\t\t\tval = \"Greedy\"\n\t\t}\n\t\tthis.setState({ algorithm: val })\n\t}\n\t// #061830\n\trender() {\n\t\tconst { onClearPathPressed, onClearGridPressed } = this.props\n\t\treturn (\n\t\t\t<Menu fixed=\"top\" inverted id=\"navbar\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Menu.Item header>\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tplaceholder=\"Algorithms\"\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\tid=\"algo\"\n\t\t\t\t\t\t\tonChange={this.algorithmCatcher}\n\t\t\t\t\t\t\toptions={this.algorithmOptions}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item header>\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tplaceholder=\"Obstacles\"\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tselection\n\t\t\t\t\t\t\tid=\"walls\"\n\t\t\t\t\t\t\tonChange={this.obstacleCatcher}\n\t\t\t\t\t\t\toptions={this.obstacles}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t<Menu.Item>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tid=\"button-visualize\"\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonClick={this.handleVisualize}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.state.algorithm === \"Algorithms\"\n\t\t\t\t\t\t\t\t? \"Pick An Algorithm\"\n\t\t\t\t\t\t\t\t: `Visualize ${this.state.algorithm} !`}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button id=\"button\" onClick={() => onClearPathPressed()}>\n\t\t\t\t\t\t\tClear Path\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button id=\"button\" onClick={() => onClearGridPressed()}>\n\t\t\t\t\t\t\tClear Grid\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t</Container>\n\t\t\t</Menu>\n\t\t)\n\t}\n}\n","export function dijkstra(grid, startNode, finishNode) {\n\tstartNode.distance = 0;\n\tconst visitedNodes = [];\n\tconst unVisitedNodes = getAllNodes(grid);\n\twhile (unVisitedNodes.length) {\n\t\tsortNodesByDistance(unVisitedNodes);\n\t\tconst closestNode = unVisitedNodes.shift();\n\t\tif (closestNode.isWall) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (closestNode.distance === Infinity) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tclosestNode.isVisited = true;\n\t\tvisitedNodes.push(closestNode);\n\t\tif (closestNode === finishNode) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tupdateUnvisitedNeighbors(grid, closestNode);\n\t}\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n\tunvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(grid, node) {\n\tconst unvisitedNeighbors = getUnvisitedNeighbors(grid, node.row, node.col);\n\tfor (let n of unvisitedNeighbors) {\n\t\tn.distance = node.distance + (n.isWeighted ? 15 : 1);\n\t\tn.parentNode = node;\n\t}\n}\n\nfunction getUnvisitedNeighbors(grid, row, col) {\n\tconst nodes = [];\n\tif (row > 0) nodes.push(grid[row - 1][col]);\n\tif (col > 0) nodes.push(grid[row][col - 1]);\n\tif (row < grid.length - 1) nodes.push(grid[row + 1][col]);\n\tif (col < grid[0].length - 1) nodes.push(grid[row][col + 1]);\n\t// if (col < grid[0].length - 2) nodes.push(grid[row][col + 2]);\n\treturn nodes.filter((node) => !node.isVisited);\n}\n\nfunction getAllNodes(grid) {\n\tconst nodes = [];\n\tfor (let row of grid) {\n\t\tfor (let col of row) {\n\t\t\tnodes.push(col);\n\t\t}\n\t}\n\treturn nodes;\n}\n\nexport function getDijkstraPath(finishNode) {\n\tconst nodes = [];\n\tconst node = finishNode;\n\twhile (finishNode.parentNode) {\n\t\tnodes.push(finishNode);\n\t\tfinishNode = finishNode.parentNode;\n\t}\n\tif (node !== finishNode) nodes.push(finishNode);\n\tnodes.reverse();\n\treturn nodes;\n}\n","export function astar(grid, startNode, finishNode) {\n\tvar visitedNodes = [];\n\tvar openList = [];\n\tstartNode.f = 0;\n\topenList.push(startNode);\n\n\twhile (openList.length > 0) {\n\t\tsortNodesByFScore(openList);\n\t\tconst curr = openList.shift();\n\t\tif (curr.isWall === true) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (curr.f === Infinity) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tcurr.isVisited = true;\n\t\tvisitedNodes.push(curr);\n\t\tif (curr === finishNode) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tupdateUnvisitedNeighbors(grid, curr, openList, finishNode);\n\t}\n\treturn visitedNodes;\n}\n\nfunction sortNodesByFScore(openNodes) {\n\topenNodes.sort((nodeA, nodeB) => nodeA.f - nodeB.f);\n}\n\n// Manhattan Distance\nfunction heuristic(nodeA, nodeB) {\n\tvar d1 = Math.abs(nodeA.row - nodeB.row);\n\tvar d2 = Math.abs(nodeA.col - nodeB.col);\n\treturn d1 + d2;\n}\n\nfunction updateUnvisitedNeighbors(grid, curr, openList, finishNode) {\n\tvar neighbors = getOpenNeighbors(grid, curr.row, curr.col);\n\tfor (let neighbor of neighbors) {\n\t\tvar gScore = curr.g + (neighbor.isWeighted ? 15 : 1);\n\t\tvar best = false;\n\t\tvar inOpenList = false;\n\t\tfor (let node of openList) {\n\t\t\tif (node === neighbor) {\n\t\t\t\tinOpenList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!inOpenList) {\n\t\t\tbest = true;\n\t\t\tneighbor.h = heuristic(neighbor, finishNode);\n\t\t\topenList.push(neighbor);\n\t\t} else if (gScore < neighbor.g) {\n\t\t\tbest = true;\n\t\t}\n\t\tif (best) {\n\t\t\tneighbor.parentNode = curr;\n\t\t\tneighbor.g = gScore;\n\t\t\tneighbor.f = neighbor.g + neighbor.h;\n\t\t}\n\t}\n}\n\nfunction getOpenNeighbors(grid, row, col) {\n\tconst nodes = [];\n\tif (row > 0) nodes.push(grid[row - 1][col]);\n\tif (col > 0) nodes.push(grid[row][col - 1]);\n\tif (row < grid.length - 1) nodes.push(grid[row + 1][col]);\n\tif (col < grid[0].length - 1) nodes.push(grid[row][col + 1]);\n\t// if (row > 0 && col > 0) nodes.push(grid[row - 1][col - 1]);\n\t// if (row < grid.length - 1 && col < grid[0].length - 1)\n\t// \tnodes.push(grid[row + 1][col + 1]);\n\t// if (row > 0 && col < grid[0].length - 1) nodes.push(grid[row - 1][col + 1]);\n\t// if (row < grid.length - 1 && col > 0) nodes.push(grid[row + 1][col - 1]);\n\treturn nodes.filter((node) => !node.isVisited && !node.isWall);\n}\n\nexport function getAStarPath(finishNode) {\n\tvar curr = finishNode;\n\tvar ret = [];\n\twhile (curr.parentNode) {\n\t\tret.push(curr);\n\t\tcurr = curr.parentNode;\n\t}\n\tif (curr !== finishNode) ret.push(curr);\n\treturn ret.reverse();\n}\n","export function greedyBFS(grid, startNode, finishNode) {\n\tvar visitedNodes = [];\n\tvar openList = [];\n\tstartNode.f = 0;\n\topenList.push(startNode);\n\n\twhile (openList.length > 0) {\n\t\tsortNodesByFScore(openList);\n\t\tconst curr = openList.shift();\n\t\tif (curr.isWall === true) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (curr.f === Infinity) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tcurr.isVisited = true;\n\t\tvisitedNodes.push(curr);\n\t\tif (curr === finishNode) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tupdateUnvisitedNeighbors(grid, curr, openList, finishNode);\n\t}\n\treturn visitedNodes;\n}\n\nfunction sortNodesByFScore(openNodes) {\n\topenNodes.sort((nodeA, nodeB) => nodeA.f - nodeB.f);\n}\n\n// Manhattan Distance\nfunction heuristic(nodeA, nodeB) {\n\tvar d1 = Math.abs(nodeA.row - nodeB.row);\n\tvar d2 = Math.abs(nodeA.col - nodeB.col);\n\treturn d1 + d2;\n}\n\nfunction updateUnvisitedNeighbors(grid, curr, openList, finishNode) {\n\tvar neighbors = getOpenNeighbors(grid, curr.row, curr.col);\n\tfor (let neighbor of neighbors) {\n\t\tvar inOpenList = false;\n\t\tvar best = false;\n\t\tfor (let node of openList) {\n\t\t\tif (node === neighbor) {\n\t\t\t\tinOpenList = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!inOpenList) {\n\t\t\tbest = true;\n\t\t\tneighbor.h =\n\t\t\t\theuristic(neighbor, finishNode) + (neighbor.isWeighted ? 15 : 0);\n\t\t\topenList.push(neighbor);\n\t\t}\n\t\tif (best) {\n\t\t\tneighbor.parentNode = curr;\n\t\t\tneighbor.f = neighbor.h;\n\t\t}\n\t}\n}\n\nfunction getOpenNeighbors(grid, row, col) {\n\tconst nodes = [];\n\tif (row > 0) nodes.push(grid[row - 1][col]);\n\tif (col > 0) nodes.push(grid[row][col - 1]);\n\tif (row < grid.length - 1) nodes.push(grid[row + 1][col]);\n\tif (col < grid[0].length - 1) nodes.push(grid[row][col + 1]);\n\t// if (row < grid.length - 1 && col < grid[0].length - 1)\n\t// \tnodes.push(grid[row + 1][col + 1]);\n\t// if (row > 0 && col < grid[0].length - 1) nodes.push(grid[row - 1][col + 1]);\n\t// if (row < grid.length - 1 && col > 0) nodes.push(grid[row + 1][col - 1]);\n\treturn nodes.filter((node) => !node.isVisited && !node.isWall);\n}\n\nexport function getGreedyBFSPath(finishNode) {\n\tvar curr = finishNode;\n\tvar ret = [];\n\twhile (curr.parentNode) {\n\t\tret.push(curr);\n\t\tcurr = curr.parentNode;\n\t}\n\tif (curr !== finishNode) ret.push(curr);\n\treturn ret.reverse();\n}\n","export function bfs(grid, startNode, finishNode) {\n\tstartNode.distance = 0;\n\tconst visitedNodes = [];\n\tconst unVisitedNodes = getAllNodes(grid);\n\twhile (unVisitedNodes.length) {\n\t\tsortNodesByDistance(unVisitedNodes);\n\t\tconst closestNode = unVisitedNodes.shift();\n\t\tif (closestNode.isWall) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (closestNode.distance === Infinity) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tclosestNode.isVisited = true;\n\t\tvisitedNodes.push(closestNode);\n\t\tif (closestNode === finishNode) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tupdateUnvisitedNeighbors(grid, closestNode);\n\t}\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n\tunvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(grid, node) {\n\tconst unvisitedNeighbors = getUnvisitedNeighbors(grid, node.row, node.col);\n\tfor (let n of unvisitedNeighbors) {\n\t\tn.distance = node.distance + 1;\n\t\tn.parentNode = node;\n\t}\n}\n\nfunction getUnvisitedNeighbors(grid, row, col) {\n\tconst nodes = [];\n\tif (row > 0) nodes.push(grid[row - 1][col]);\n\tif (col > 0) nodes.push(grid[row][col - 1]);\n\tif (row < grid.length - 1) nodes.push(grid[row + 1][col]);\n\tif (col < grid[0].length - 1) nodes.push(grid[row][col + 1]);\n\treturn nodes.filter((node) => !node.isVisited);\n}\n\nfunction getAllNodes(grid) {\n\tconst nodes = [];\n\tfor (let row of grid) {\n\t\tfor (let col of row) {\n\t\t\tnodes.push(col);\n\t\t}\n\t}\n\treturn nodes;\n}\n\nexport function getBFSPath(finishNode) {\n\tconst nodes = [];\n\tconst node = finishNode;\n\twhile (finishNode.parentNode) {\n\t\tnodes.push(finishNode);\n\t\tfinishNode = finishNode.parentNode;\n\t}\n\tif (node !== finishNode) nodes.push(finishNode);\n\tnodes.reverse();\n\treturn nodes;\n}\n","export function dfs(grid, startNode, finishNode) {\n\tstartNode.distance = 0;\n\tconst visitedNodes = [];\n\tconst queue = [];\n\tqueue.push(startNode);\n\twhile (queue.length) {\n\t\tconst closestNode = queue.shift();\n\t\tif (closestNode.isWall) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (closestNode.distance === Infinity) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tif (closestNode.isVisited) {\n\t\t\tcontinue;\n\t\t}\n\t\tclosestNode.isVisited = true;\n\t\tvisitedNodes.push(closestNode);\n\t\tif (closestNode === finishNode) {\n\t\t\treturn visitedNodes;\n\t\t}\n\t\tupdateUnvisitedNeighbors(grid, closestNode, queue);\n\t}\n\treturn visitedNodes;\n}\n\nfunction updateUnvisitedNeighbors(grid, node, queue) {\n\tconst unvisitedNeighbors = getUnvisitedNeighbors(grid, node.row, node.col);\n\tfor (let n of unvisitedNeighbors) {\n\t\tqueue.unshift(n);\n\t\tn.distance = node.distance + 1;\n\t\tn.parentNode = node;\n\t}\n}\n\nfunction getUnvisitedNeighbors(grid, row, col) {\n\tconst nodes = [];\n\tif (col > 0) nodes.push(grid[row][col - 1]);\n\tif (row > 0) nodes.push(grid[row - 1][col]);\n\tif (col < grid[0].length - 1) nodes.push(grid[row][col + 1]);\n\tif (row < grid.length - 1) nodes.push(grid[row + 1][col]);\n\treturn nodes.filter((node) => !node.isVisited && !node.isWall);\n}\n\nexport function getDFSPath(finishNode) {\n\tconst nodes = [];\n\tconst node = finishNode;\n\twhile (finishNode.parentNode) {\n\t\tnodes.push(finishNode);\n\t\tfinishNode = finishNode.parentNode;\n\t}\n\tif (node !== finishNode) nodes.push(finishNode);\n\tnodes.reverse();\n\treturn nodes;\n}\n","import React, { Component } from \"react\"\nimport Node from \"../components/Node/Node\"\nimport NavigationBar from \"../components/NavigationBar/NavigationBar\"\nimport { dijkstra, getDijkstraPath } from \"../components/Algorithms/Dijkstra\"\nimport { astar, getAStarPath } from \"../components/Algorithms/AStar\"\nimport {\n\tgreedyBFS,\n\tgetGreedyBFSPath,\n} from \"../components/Algorithms/GreedyBestFirstSearch\"\nimport { bfs, getBFSPath } from \"../components/Algorithms/BFS\"\nimport { dfs, getDFSPath } from \"../components/Algorithms/DFS\"\nimport \"./PathfindingVisualizer.css\"\n\nexport default class Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tgrid: [],\n\t\t\tdragStart: false,\n\t\t\tdragEnd: false,\n\t\t\tmousePressed: false,\n\t\t\tobstacle: \"Wall\",\n\t\t\tstartX: 14,\n\t\t\tstartY: 10,\n\t\t\tfinishX: 14,\n\t\t\tfinishY: 56,\n\t\t\tinProgress: false,\n\t\t\tafterPath: false,\n\t\t\talgo: \"\",\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst final = this.getInitialGrid()\n\t\tthis.setState({ grid: final })\n\t\twindow.addEventListener(\"resize\", () =>\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tgrid: this.getInitialGrid(),\n\t\t\t}))\n\t\t)\n\t}\n\n\tonMouseDown(row, col) {\n\t\tif (this.state.inProgress || this.state.afterPath) {\n\t\t\treturn\n\t\t}\n\t\tconst { grid } = this.state\n\t\tif (grid[row][col].isStart) {\n\t\t\tthis.setState({\n\t\t\t\tmousePressed: true,\n\t\t\t\tdragStart: true,\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\tif (grid[row][col].isFinish) {\n\t\t\tthis.setState({\n\t\t\t\tmousePressed: true,\n\t\t\t\tdragEnd: true,\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\tconst newGrid = this.updatedGrid(this.state.grid, row, col)\n\t\tthis.setState({ grid: newGrid, mousePressed: true })\n\t}\n\n\tonMouseEnter(row, col) {\n\t\tconst { grid } = this.state\n\t\tif (this.state.inProgress || this.state.afterPath) {\n\t\t\treturn\n\t\t}\n\t\tif (!this.state.mousePressed) {\n\t\t\treturn\n\t\t}\n\t\tif (this.state.dragStart) {\n\t\t\tconst newGrid = grid\n\t\t\tnewGrid[row][col].isStart = !grid[row][col].isStart\n\t\t\tnewGrid[row][col].isWall = false\n\t\t\tnewGrid[row][col].isWeighted = false\n\t\t\tthis.setState({ grid: newGrid, startX: row, startY: col })\n\t\t\treturn\n\t\t}\n\t\tif (this.state.dragEnd) {\n\t\t\tconst newGrid = grid\n\t\t\tnewGrid[row][col].isWeighted = false\n\t\t\tnewGrid[row][col].isWall = false\n\t\t\tnewGrid[row][col].isFinish = !grid[row][col].isFinish\n\t\t\tthis.setState({\n\t\t\t\tgrid: newGrid,\n\t\t\t\tfinishX: row,\n\t\t\t\tfinishY: col,\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t\tif (grid[row][col].isStart || grid[row][col].isFinish) {\n\t\t\treturn\n\t\t}\n\t\tconst newGrid = this.updatedGrid(this.state.grid, row, col)\n\t\tthis.setState({ grid: newGrid })\n\t}\n\n\tonMouseOut(row, col) {\n\t\tif (this.state.inProgress || this.state.afterPath) {\n\t\t\treturn\n\t\t}\n\t\tconst { grid } = this.state\n\t\tif (!this.state.mousePressed) {\n\t\t\treturn\n\t\t}\n\t\tif (this.state.dragStart) {\n\t\t\tconst newGrid = grid\n\t\t\tnewGrid[row][col].isStart = !grid[row][col].isStart\n\t\t\tthis.setState({ grid: newGrid, startX: row, startY: col })\n\t\t\treturn\n\t\t}\n\t\tif (this.state.dragEnd) {\n\t\t\tconst newGrid = grid\n\t\t\tnewGrid[row][col].isFinish = !grid[row][col].isFinish\n\t\t\tthis.setState({\n\t\t\t\tgrid: newGrid,\n\t\t\t\tfinishX: row,\n\t\t\t\tfinishY: col,\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n\n\tonMouseUp(row, col) {\n\t\tif (this.state.inProgress || this.state.afterPath) {\n\t\t\treturn\n\t\t}\n\t\tthis.setState({ dragStart: false, dragEnd: false, mousePressed: false })\n\t}\n\n\tanimateNoPath() {\n\t\tfor (let i = 0; i < 30; i++) {\n\t\t\tfor (let j = 0; j < 70; j++) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.state.grid[i][j].isVisited &&\n\t\t\t\t\t\t!this.state.grid[i][j].isFinish &&\n\t\t\t\t\t\t!this.state.grid[i][j].isStart &&\n\t\t\t\t\t\t!this.state.grid[i][j].isWall &&\n\t\t\t\t\t\t!this.state.grid[i][j].isWeighted\n\t\t\t\t\t)\n\t\t\t\t\t\tdocument.getElementById(`node-${i}-${j}`).className = \"node nopath\"\n\t\t\t\t}, 40 * i + 40 * j)\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (i === 29) window.alert(\"No Path Found :(\")\n\t\t\t}, 4500)\n\t\t}\n\t}\n\n\tanimatePathNodes(nodesInOrder) {\n\t\tif (nodesInOrder.length === 0) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.animateNoPath()\n\t\t\t}, 2000)\n\t\t\tthis.setState({ inProgress: false, afterPath: true })\n\n\t\t\treturn\n\t\t}\n\t\tfor (let i = 0; i <= nodesInOrder.length; i++) {\n\t\t\tif (i === nodesInOrder.length) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.setState({ inProgress: false, afterPath: true })\n\t\t\t\t}, 30 * i)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst node = nodesInOrder[i]\n\t\t\t\tif (!node.isStart && !node.isFinish && !node.isWeighted)\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node inpath\"\n\t\t\t\telse if (node.isStart) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node startSpecial\"\n\t\t\t\t} else if (node.isFinish) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node finishSpecial\"\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node weightSpecial\"\n\t\t\t\t}\n\t\t\t}, 30 * i)\n\t\t}\n\t}\n\n\tanimateVisitedNodes(visitedNodes, nodesInOrder) {\n\t\tfor (let i = 0; i <= visitedNodes.length; i++) {\n\t\t\tif (i === visitedNodes.length) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.animatePathNodes(nodesInOrder)\n\t\t\t\t}, 10 * i)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst node = visitedNodes[i]\n\t\t\t\tif (!node.isStart && !node.isFinish && !node.isWeighted)\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node visited\"\n\t\t\t\telse if (node.isStart) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node visitedStart\"\n\t\t\t\t} else if (node.isFinish) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node visitedFinish\"\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node visitedWeight\"\n\t\t\t\t}\n\t\t\t}, 10 * i)\n\t\t}\n\t}\n\n\tvisualizeDijkstra(grid, startNode, finishNode) {\n\t\tconst visitedNodes = dijkstra(grid, startNode, finishNode)\n\t\tconst nodesInOrder = getDijkstraPath(finishNode)\n\t\tthis.animateVisitedNodes(visitedNodes, nodesInOrder)\n\t}\n\n\tvisualizeAStar(grid, startNode, finishNode) {\n\t\tconst visitedNodes = astar(grid, startNode, finishNode)\n\t\tconst nodesInOrder = getAStarPath(finishNode)\n\t\tthis.animateVisitedNodes(visitedNodes, nodesInOrder)\n\t}\n\n\tvisualizeBFS(grid, startNode, finishNode) {\n\t\tconst visitedNodes = bfs(grid, startNode, finishNode)\n\t\tconst nodesInOrder = getBFSPath(finishNode)\n\t\tthis.animateVisitedNodes(visitedNodes, nodesInOrder)\n\t}\n\n\tvisualizeDFS(grid, startNode, finishNode) {\n\t\tconst visitedNodes = dfs(grid, startNode, finishNode)\n\t\tconst nodesInOrder = getDFSPath(finishNode)\n\t\tthis.animateVisitedNodes(visitedNodes, nodesInOrder)\n\t}\n\n\tvisualizeGreedy(grid, startNode, finishNode) {\n\t\tconst visitedNodes = greedyBFS(grid, startNode, finishNode)\n\t\tconst nodesInOrder = getGreedyBFSPath(finishNode)\n\t\tthis.animateVisitedNodes(visitedNodes, nodesInOrder)\n\t}\n\n\tvisualize = (algorithm) => {\n\t\tif (this.state.inProgress) {\n\t\t\treturn\n\t\t}\n\t\tvar a = document.getElementById(\"info\")\n\t\tif (algorithm === \"Algorithms\") {\n\t\t\ta.innerHTML = \"Please choose an algorithm to visualize\"\n\t\t\treturn\n\t\t}\n\t\tthis.setState({ inProgress: true })\n\t\tif (this.state.afterPath) {\n\t\t\tthis.clearPath()\n\t\t}\n\t\tvar { grid, startX, startY, finishX, finishY } = this.state\n\n\t\tvar startNode = grid[startX][startY]\n\t\tvar finishNode = grid[finishX][finishY]\n\t\tif (algorithm === \"Dijkstra\") {\n\t\t\tthis.visualizeDijkstra(grid, startNode, finishNode)\n\t\t} else if (algorithm === \"A*\") {\n\t\t\tthis.visualizeAStar(grid, startNode, finishNode)\n\t\t} else if (algorithm === \"Greedy\") {\n\t\t\tthis.visualizeGreedy(grid, startNode, finishNode)\n\t\t} else if (algorithm === \"BFS\") {\n\t\t\tthis.visualizeBFS(grid, startNode, finishNode)\n\t\t} else if (algorithm === \"DFS\") {\n\t\t\tthis.visualizeDFS(grid, startNode, finishNode)\n\t\t}\n\t}\n\n\tchooseAlgorithm = (algorithm) => {\n\t\tvar a = document.getElementById(\"info\")\n\t\tif (algorithm === \"Dijkstra\") {\n\t\t\talgorithm = \"W\"\n\t\t\ta.innerHTML =\n\t\t\t\t\"Dijkstra's Algorithm is <i>weighted</i> and <i>guarantees</i> the shortest path!\"\n\t\t} else if (algorithm === \"A* Search\") {\n\t\t\talgorithm = \"W\"\n\t\t\ta.innerHTML =\n\t\t\t\t\"A* Search is <i>weighted</i> and <i>guarantees</i> the shortest path!\"\n\t\t} else if (algorithm === \"Greedy Best First Search\") {\n\t\t\talgorithm = \"W\"\n\t\t\ta.innerHTML =\n\t\t\t\t\"Greedy Best First Search is <i>weighted</i> and <i>does not guarantee</i> the shortest path!\"\n\t\t} else if (algorithm === \"Breadth First Search (BFS)\") {\n\t\t\talgorithm = \"U\"\n\t\t\tthis.clearWeightedNodes()\n\t\t\ta.innerHTML =\n\t\t\t\t\"Breath First Search is <i>unweighted</i> and <i>guarantees</i> the shortest path!\"\n\t\t} else if (algorithm === \"Depth First Search (DFS)\") {\n\t\t\talgorithm = \"U\"\n\t\t\tthis.clearWeightedNodes()\n\t\t\ta.innerHTML =\n\t\t\t\t\"Depth First Search is <i>unweighted</i> and <i>does not guarantee</i> the shortest path!\"\n\t\t}\n\t\tthis.setState({ algo: algorithm })\n\t}\n\n\tchooseObstacle = (val) => {\n\t\tthis.setState({ obstacle: val })\n\t}\n\n\trender() {\n\t\tconst { grid } = this.state\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<NavigationBar\n\t\t\t\t\tonVisualizePressed={this.visualize}\n\t\t\t\t\tonClearPathPressed={this.clearPath}\n\t\t\t\t\tonClearGridPressed={this.clearGrid}\n\t\t\t\t\tonChoosingAlgorithm={this.chooseAlgorithm}\n\t\t\t\t\tonChoosingObstacle={this.chooseObstacle}\n\t\t\t\t/>\n\t\t\t\t<div className=\"main-content\" onKeyDown={this.onKeyDown}>\n\t\t\t\t\t<h3 id=\"info\">Please choose an algorithm to visualize</h3>\n\t\t\t\t\t<table className=\"grid\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{grid.map((row, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t\t\t\t{row.map((node, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\trow={node.row}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcol={node.col}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisStart={node.isStart}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisFinish={node.isFinish}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisWall={node.isWall}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisWeighted={node.isWeighted}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={(row, col) => this.onMouseDown(row, col)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter={(row, col) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.onMouseEnter(row, col)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseUp={() => this.onMouseUp()}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseOut={(row, col) => this.onMouseOut(row, col)}\n\t\t\t\t\t\t\t\t\t\t\t\t></Node>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n\n\tgetColumnNumber() {\n\t\tconst innerWidth = window.innerWidth\n\t\tif (innerWidth >= 1710) return 65\n\t\tif (innerWidth >= 1600) return 60\n\t\tif (innerWidth >= 1450) return 55\n\t\tif (innerWidth >= 1320) return 50\n\t\tif (innerWidth >= 1190) return 45\n\t\tif (innerWidth >= 1060) return 40\n\t\tif (innerWidth >= 1000) return 35\n\t\treturn 20\n\t}\n\n\tgetInitialGrid() {\n\t\tvar final = []\n\t\t/**\n\t\t * 1000 - 1060 : 35\n\t\t * 1060 - 1190 : 40\n\t\t * 1190 - 1320: 45\n\t\t * 1320 - 1450: 50\n\t\t * 1450 - 1600: 55\n\t\t * 1600 - 1710: 60\n\t\t * 1710+ = 65\n\t\t */\n\t\tconst { startX, startY, finishX } = this.state\n\t\tconst noOfColumns = this.getColumnNumber()\n\t\tconst finishY = noOfColumns === 20 ? 19 : noOfColumns - 9\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tfinishY,\n\t\t}))\n\n\t\tfor (let i = 0; i < 28; i++) {\n\t\t\tvar cur = []\n\t\t\tfor (let j = 0; j < noOfColumns; j++) {\n\t\t\t\tconst node = {\n\t\t\t\t\trow: i,\n\t\t\t\t\tcol: j,\n\t\t\t\t\tisStart: i === startX && j === startY,\n\t\t\t\t\tisFinish: i === finishX && j === finishY,\n\t\t\t\t\tisWeighted: false,\n\t\t\t\t\tdistance: Infinity,\n\t\t\t\t\tisVisited: false,\n\t\t\t\t\tisWall: false,\n\t\t\t\t\tparentNode: null,\n\t\t\t\t\tf: Infinity,\n\t\t\t\t\tg: 0,\n\t\t\t\t\th: Infinity,\n\t\t\t\t}\n\t\t\t\tcur.push(node)\n\t\t\t}\n\t\t\tfinal.push(cur)\n\t\t}\n\t\treturn final\n\t}\n\n\tclearWeightedNodes() {\n\t\tconst { grid } = this.state\n\t\tvar final = grid\n\t\tfor (let row of final) {\n\t\t\tfor (let i = 0; i < row.length; i++) {\n\t\t\t\tconst node = row[i]\n\t\t\t\tif (node.isWeighted) {\n\t\t\t\t\tconst newNode = {\n\t\t\t\t\t\t...node,\n\t\t\t\t\t\tisWeighted: false,\n\t\t\t\t\t}\n\t\t\t\t\tif (!newNode.isStart && !newNode.isFinish)\n\t\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\t\"node\"\n\t\t\t\t\trow[i] = newNode\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({ grid: final })\n\t}\n\n\tclearPath = () => {\n\t\tif (this.state.inProgress) {\n\t\t\treturn\n\t\t}\n\t\tconst { grid } = this.state\n\t\tvar final = grid\n\t\tfor (let row of final) {\n\t\t\tfor (let i = 0; i < row.length; i++) {\n\t\t\t\tconst node = row[i]\n\t\t\t\tconst newNode = {\n\t\t\t\t\t...node,\n\t\t\t\t\tdistance: Infinity,\n\t\t\t\t\tisVisited: false,\n\t\t\t\t\tparentNode: null,\n\t\t\t\t\tf: Infinity,\n\t\t\t\t\tg: 0,\n\t\t\t\t\th: Infinity,\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\t!newNode.isStart &&\n\t\t\t\t\t!newNode.isFinish &&\n\t\t\t\t\t!newNode.isWall &&\n\t\t\t\t\t!newNode.isWeighted\n\t\t\t\t)\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node\"\n\t\t\t\telse if (newNode.isStart) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node start\"\n\t\t\t\t} else if (newNode.isFinish) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node finish\"\n\t\t\t\t} else if (newNode.isWall) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node wall\"\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node weight\"\n\t\t\t\t}\n\t\t\t\trow[i] = newNode\n\t\t\t}\n\t\t}\n\t\tthis.setState({ grid: final, afterPath: false })\n\t}\n\n\tclearGrid = () => {\n\t\tif (this.state.inProgress) {\n\t\t\treturn\n\t\t}\n\t\tconst { grid } = this.state\n\t\tvar final = grid\n\t\tfor (let row of final) {\n\t\t\tfor (let i = 0; i < row.length; i++) {\n\t\t\t\tconst node = row[i]\n\t\t\t\tconst newNode = {\n\t\t\t\t\t...node,\n\t\t\t\t\tdistance: Infinity,\n\t\t\t\t\tisVisited: false,\n\t\t\t\t\tisWall: false,\n\t\t\t\t\tisWeighted: false,\n\t\t\t\t\tparentNode: null,\n\t\t\t\t\tf: Infinity,\n\t\t\t\t\tg: 0,\n\t\t\t\t\th: Infinity,\n\t\t\t\t}\n\t\t\t\tif (!newNode.isStart && !newNode.isFinish)\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node\"\n\t\t\t\telse if (newNode.isStart) {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node start\"\n\t\t\t\t} else {\n\t\t\t\t\tdocument.getElementById(`node-${node.row}-${node.col}`).className =\n\t\t\t\t\t\t\"node finish\"\n\t\t\t\t}\n\t\t\t\trow[i] = newNode\n\t\t\t}\n\t\t}\n\t\tthis.setState({ grid: final, afterPath: false })\n\t}\n\n\tupdatedGrid(grid, row, col) {\n\t\tconst newGrid = grid.slice()\n\t\tconst node = grid[row][col]\n\t\tif (this.state.obstacle === \"Wall\") {\n\t\t\tif (node.isWeighted) {\n\t\t\t\tnode.isWeighted = false\n\t\t\t}\n\t\t\tconst newNode = {\n\t\t\t\t...node,\n\t\t\t\tisWall: !node.isWall,\n\t\t\t}\n\t\t\tnewGrid[row][col] = newNode\n\t\t\treturn newGrid\n\t\t} else {\n\t\t\tif (this.state.algo === \"U\") {\n\t\t\t\treturn grid\n\t\t\t}\n\t\t\tif (node.isWall) {\n\t\t\t\tnode.isWall = false\n\t\t\t}\n\t\t\tconst newNode = {\n\t\t\t\t...node,\n\t\t\t\tisWeighted: !node.isWeighted,\n\t\t\t}\n\t\t\tnewGrid[row][col] = newNode\n\t\t\treturn newGrid\n\t\t}\n\t}\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport PathfindingVisualizer from \"./containers/PathfindingVisualizer\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<link\n\t\t\t\thref=\"https://fonts.googleapis.com/css2?family=Merriweather&family=Nanum+Myeongjo:wght@700&family=PT+Serif&display=swap\"\n\t\t\t\trel=\"stylesheet\"\n\t\t\t></link>\n\t\t\t<link\n\t\t\t\thref=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@600&display=swap\"\n\t\t\t\trel=\"stylesheet\"\n\t\t\t></link>\n\t\t\t<PathfindingVisualizer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}